version: '3.8'

x-logging: &default-logging
  logging:
    options:
      max-size: "100m"
      max-file: "3"
    driver: local

x-restart: &default-restart
  restart: "no"

services:
  api:
    container_name: task-api
    build:
      dockerfile: Dockerfile
      context: api
      args:
        - APP_PATH=/usr/local/src
    environment:
      APP_LOGGER_NAME: api
      WSGI_LOG_LEVEL: DEBUG
      WSGI_PORT: $CONTAINER_API_PORT
      WSGI_WORKERS_COUNT: 2
    ports:
      - $HOST_BACKEND_PORT:$CONTAINER_API_PORT
    depends_on:
      - app
    <<: *default-logging 
    <<: *default-restart

  app:
    container_name: task-app
    build:
      dockerfile: Dockerfile
      context: app
      args:
        - APP_PATH=/usr/local/src
    environment:
      APP_LOGGER_NAME: app
      APP_LOGGER_LEVEL: DEBUG
      DB_PORT: $CONTAINER_DB_PORT
      DB_HOST: $CONTAINER_DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
    depends_on:
      - db
    <<: *default-logging 
    <<: *default-restart
  
  db:
    container_name: $CONTAINER_DB_NAME
    image: "postgres:15.1-alpine3.17"
    ports:
      - $CONTAINER_DB_PORT:$CONTAINER_DB_PORT
    volumes:
      - task_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_USER=$DB_USER
    command: postgres -c 'max_connections=200'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", $DB_NAME]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 80s 
    <<: *default-logging 
    <<: *default-restart

volumes:
    task_db_data:

networks:
  default:
    driver: bridge